{"version":3,"sources":["components/NavBar.jsx","utils/validatePhone.js","services/apiService.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","onReset","className","onClick","validatePhone","number","RegExp","test","baseUrl","axios","get","then","res","data","newObj","post","initialInput","name","phone","initialInfo","id","App","useState","info","setInfo","input","setInput","useEffect","apiService","handleInputChange","e","target","value","position","autoClose","hideProgressBar","closeOnClick","newestOnTop","pauseOnHover","onSubmit","preventDefault","toast","error","i","length","newInfo","newPerson","concat","success","type","onChange","map","person","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAkBeA,G,MAfA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,qBAAKC,UAAU,+BAAf,SACE,wBACEA,UAAU,kBACVC,QAAS,WACPF,KAHJ,uBCKSG,EAVO,SAACC,GAGrB,QAFgB,IAAIC,OAAO,qCAEfC,KAAKF,I,gBCDbG,EAAU,eAcD,EAXA,WAEb,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAASA,EAAIC,SAShB,EALA,SAACC,GAEd,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAASA,EAAIC,SCDzBG,EAAe,CACnBC,KAAM,GACNC,MAAO,IAGHC,EAAc,CAAC,CAAEC,GAAI,EAAGH,KAAM,QAASC,MAAO,iBA4HrCG,EA1HH,WAAM,MAEQC,mBAASH,GAFjB,mBAETI,EAFS,KAEHC,EAFG,OAGUF,mBAASN,GAHnB,mBAGTS,EAHS,KAGFC,EAHE,KAMhBC,qBAAU,WACRC,IAAoBjB,MAAK,SAACE,GACxBW,EAAQX,QAET,IAGH,IAeMgB,EAAoB,SAACC,GACzBJ,EAAS,2BAAKD,GAAN,kBAAcK,EAAEC,OAAOd,KAAOa,EAAEC,OAAOC,UAwCjD,OACE,qCACE,cAAC,IAAD,CACEC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,cAAY,EACZC,aAAa,EACbC,cAAY,IAEd,cAAC,EAAD,CAAQrC,QAfQ,WAClBuB,EAAQL,GACRO,EAASV,MAcP,sBAAKd,UAAU,iEAAf,UACE,gCACE,2CACA,sBAAMqC,SAnDO,SAACT,GAIpB,GAHAA,EAAEU,kBAGGpC,EAAcqB,EAAMP,OAEvB,OArBoBb,EAoBLoB,EAAMP,WAnBvBuB,IAAMC,MAAN,UACKrC,EADL,0DAwBA,IAzBqB,IAACA,EAJLY,EA6BR0B,EAAI,EAAGA,EAAIpB,EAAKqB,OAAQD,GAAK,EACpC,GAAIlB,EAAMR,OAASM,EAAKoB,GAAG1B,KAEzB,OAhCaA,EA+BHQ,EAAMR,UA9BpBwB,IAAMC,MAAN,UAAezB,EAAf,sDAoCA,IACM4B,EAAU,CACdzB,GAFYG,EAAKqB,OAAS,EAG1B3B,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,OAGfU,EAAkBiB,GAASlC,MAAK,SAACmC,GAC/BtB,EAAQD,EAAKwB,OAAOD,IACpBpB,EAASV,GAnCXyB,IAAMO,QAAQ,sCA2DR,SACE,sBAAK9C,UAAU,aAAf,UACE,yCACA,uBACEA,UAAU,oBACV+C,KAAK,OACLhC,KAAK,OACLe,MAAOP,EAAMR,KACbiC,SAAUrB,IAEZ,iDACA,uBACE3B,UAAU,oBACV+C,KAAK,OACLhC,KAAK,QACLe,MAAOP,EAAMP,MACbgC,SAAUrB,IAEZ,wBAAQ3B,UAAU,kBAAkB+C,KAAK,SAAzC,0BAMN,gCACE,yCACA,oBAAI/C,UAAU,aAAd,SACGqB,EAAK4B,KAAI,SAACC,GAAD,OACR,qBAAoBlD,UAAU,2BAA9B,UACGkD,EAAOnC,KADV,MACmBmC,EAAOlC,QADjBkC,EAAOhC,mBCvHfiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92a3d8bb.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst NavBar = ({ onReset }) => {\n  return (\n    <nav className=\"navbar navbar-light bg-light\">\n      <button\n        className=\"btn btn-warning\"\n        onClick={() => {\n          onReset();\n        }}\n      >\n        Reset\n      </button>\n    </nav>\n  );\n}\n\nexport default NavBar\n\nNavBar.propTypes = {\n  onReset: PropTypes.func,\n};\n","// Validation Phone Number\nconst validatePhone = (number) => {\n  const pattern = new RegExp(/([0-9]{3})-([0-9]{3})-([0-9]{4})$/);\n\n  if (pattern.test(number)) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default validatePhone;\n","import axios from 'axios';\n\n// Base url\nconst baseUrl = '/api/persons';\n\n// Get all data from api\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\n// Create new person\nconst create = (newObj) => {\n  const req = axios.post(baseUrl, newObj);\n  return req.then((res) => res.data);\n};\n\nexport default { getAll, create };\n","import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport './App.css';\n\n// Components\nimport NavBar from './components/NavBar';\n\n// Utils\nimport validatePhone from './utils/validatePhone';\n\n// Services\nimport apiService from './services/apiService';\n\nconst initialInput = {\n  name: '',\n  phone: '',\n};\n\nconst initialInfo = [{ id: 0, name: 'test1', phone: '090-403-3920' }];\n\nconst App = () => {\n  // States\n  const [info, setInfo] = useState(initialInfo);\n  const [input, setInput] = useState(initialInput);\n\n  // Request data\n  useEffect(() => {\n    apiService.getAll().then((data) => {\n      setInfo(data);\n    });\n  }, []);\n\n  // Notifications\n  const notifyErr = (name) => {\n    toast.error(`${name} is duplicated! Please try again with a new ones!`);\n  };\n\n  const notifyErrPhone = (number) => {\n    toast.error(\n      `${number} is wrong format! Please try again with xxx-xxx-xxxx!`\n    );\n  };\n\n  const notifySuc = () => {\n    toast.success('New record added successfully!');\n  };\n\n  // Handle Events\n  const handleInputChange = (e) => {\n    setInput({ ...input, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validate phone number is correct format\n    if (!validatePhone(input.phone)) {\n      notifyErrPhone(input.phone);\n      return;\n    }\n\n    // Validate name is duplicated\n    for (let i = 0; i < info.length; i += 1) {\n      if (input.name === info[i].name) {\n        notifyErr(input.name);\n        return;\n      }\n    }\n\n    // Success adding new record\n    const newId = info.length + 1;\n    const newInfo = {\n      id: newId,\n      name: input.name,\n      phone: input.phone,\n    };\n\n    apiService.create(newInfo).then((newPerson) => {\n      setInfo(info.concat(newPerson));\n      setInput(initialInput);\n      notifySuc();\n    });\n  };\n\n  const handleReset = () => {\n    setInfo(initialInfo);\n    setInput(initialInput);\n  };\n\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        closeOnClick\n        newestOnTop={true}\n        pauseOnHover\n      />\n      <NavBar onReset={handleReset} />\n      <div className=\"w-25 m-5 d-flex flex-column justify-content-center text-center\">\n        <div>\n          <h1>Phonebook</h1>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label>Name</label>\n              <input\n                className=\"form-control mb-3\"\n                type=\"text\"\n                name=\"name\"\n                value={input.name}\n                onChange={handleInputChange}\n              />\n              <label>Phone number</label>\n              <input\n                className=\"form-control mb-3\"\n                type=\"text\"\n                name=\"phone\"\n                value={input.phone}\n                onChange={handleInputChange}\n              />\n              <button className=\"btn btn-primary\" type=\"submit\">\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n        <div>\n          <h1>Numbers</h1>\n          <ul className=\"list-group\">\n            {info.map((person) => (\n              <li key={person.id} className=\"list-group-item bg-light\">\n                {person.name} - {person.phone}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/react-toastify/dist/ReactToastify.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}